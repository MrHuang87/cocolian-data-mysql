// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: test.proto

package org.cocolian.mysql.foo;

public interface FooOrBuilder extends
    // @@protoc_insertion_point(interface_extends:Foo)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   *定义列名和数据类型，默认为字段名和字段类型。
   * </pre>
   *
   * <code>required string col1 = 1 [(.column_option) = { ... }</code>
   */
  boolean hasCol1();
  /**
   * <pre>
   *定义列名和数据类型，默认为字段名和字段类型。
   * </pre>
   *
   * <code>required string col1 = 1 [(.column_option) = { ... }</code>
   */
  java.lang.String getCol1();
  /**
   * <pre>
   *定义列名和数据类型，默认为字段名和字段类型。
   * </pre>
   *
   * <code>required string col1 = 1 [(.column_option) = { ... }</code>
   */
  com.google.protobuf.ByteString
      getCol1Bytes();

  /**
   * <pre>
   *定义列名和数据类型，默认为字段名和字段类型。
   * </pre>
   *
   * <code>optional int32 col2 = 2 [(.column_option) = { ... }</code>
   */
  boolean hasCol2();
  /**
   * <pre>
   *定义列名和数据类型，默认为字段名和字段类型。
   * </pre>
   *
   * <code>optional int32 col2 = 2 [(.column_option) = { ... }</code>
   */
  int getCol2();

  /**
   * <pre>
   *定义列名和数据类型，默认为字段名和字段类型。
   * </pre>
   *
   * <code>optional double col3 = 3 [(.column_option) = { ... }</code>
   */
  boolean hasCol3();
  /**
   * <pre>
   *定义列名和数据类型，默认为字段名和字段类型。
   * </pre>
   *
   * <code>optional double col3 = 3 [(.column_option) = { ... }</code>
   */
  double getCol3();
}
